import type { ReactionsListProps } from '../ReactionsList';
import type { DefaultStreamChatGenerics } from '../../../types/types';
declare type SharedReactionListProps = 'own_reactions' | 'reaction_counts' | 'reactionOptions' | 'reactions';
declare type UseProcessReactionsParams = Pick<ReactionsListProps, SharedReactionListProps>;
export declare const useProcessReactions: <StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics>(params: UseProcessReactionsParams) => {
    aggregatedUserNamesByType: Record<string, string[]>;
    getEmojiByReactionType: (reactionType: string) => {
        Component: import("react").ComponentType<{}>;
        type: string;
        name?: string | undefined;
    } | undefined;
    iHaveReactedWithReaction: (reactionType: string) => import("stream-chat").ReactionResponse<DefaultStreamChatGenerics> | undefined;
    latestReactions: import("stream-chat").ReactionResponse<DefaultStreamChatGenerics>[];
    latestReactionTypes: string[];
    reactionCounts: {
        [key: string]: number;
    };
    supportedReactionsArePresent: boolean;
    totalReactionCount: number;
};
export {};
//# sourceMappingURL=useProcessReactions.d.ts.map